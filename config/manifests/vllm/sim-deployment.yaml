apiVersion: apps/v1
kind: Deployment
metadata:
  name: vllm-llama3-8b-instruct
spec:
  replicas: 3
  selector:
    matchLabels:
      app: vllm-llama3-8b-instruct
  template:
    metadata:
      labels:
        app: vllm-llama3-8b-instruct
    spec:
      containers:
      - name: vllm-sim
        image: ghcr.io/llm-d/llm-d-inference-sim:latest
        imagePullPolicy: Always
        args:
        - --model
        - meta-llama/Llama-3.1-8B-Instruct
        - --port
        - "8000"
        - --max-loras
        - "2"
        - --enable-lora
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        ports:
        - containerPort: 8000
          name: http
          protocol: TCP
        resources:
          requests:
            cpu: 10m
      initContainers:
        - name: lora-adapter-syncer
          image: us-central1-docker.pkg.dev/k8s-staging-images/gateway-api-inference-extension/lora-syncer:main
          imagePullPolicy: Always
          restartPolicy: Always
          ports:
          - containerPort: 8080
            name: metrics
            protocol: TCP
          env:
          - name: DYNAMIC_LORA_ROLLOUT_CONFIG
            value: "/config/configmap.yaml"
          resources:
            requests:
              cpu: 10m
              memory: 64Mi
          volumeMounts:
          - name: config-volume
            mountPath: /config
      volumes:
      - name: config-volume
        configMap:
          name: dynamic-lora-config-sim
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: dynamic-lora-config-sim
data:
  configmap.yaml: |
    vLLMLoRAConfig:
      name: food-review-loras
      defaultBaseModel: meta-llama/Llama-3.1-8B-Instruct
      ensureExist:
        models:
        - id: food-review-1
          source: test/food-review-lora-1
        - id: food-review-2
          source: test/food-review-lora-2
      ensureNotExist:
        models: []
